%dev.kafka.bootstrap.servers=${bootstrap.url}
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.location=/tmp/client-truststore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.security.protocol=SASL_SSL
%dev.mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
%dev.mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="producer" password=\"${producer.pwd}\";

quarkus.package.type=uber-jar
kafka.bootstrap.servers=my-cluster-kafka-bootstrap:9092
mp.messaging.connector.smallrye-kafka.security.protocol=SASL_PLAINTEXT
mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="producer" password=\"${producer.pwd}\";


quarkus.ssl.native=true
quarkus.kubernetes-client.trust-certs=true

mp.messaging.incoming.quotes.connector=smallrye-kafka
mp.messaging.incoming.quotes.topic=a_quotes
mp.messaging.incoming.quotes.value.deserializer=org.acme.kafka.model.QuoteDeserializer
mp.messaging.incoming.quotes.group.id=a_group

mp.messaging.outgoing.requests.connector=smallrye-kafka
mp.messaging.outgoing.requests.topic=a_quote_requests
mp.messaging.outgoing.requests.value.serializer=org.apache.kafka.common.serialization.StringSerializer

quarkus.openshift.route.expose=true
quarkus.openshift.env.vars.ab-jolokia-off=true
quarkus.openshift.env.configmaps=jaas-config
